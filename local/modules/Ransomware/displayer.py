import config as cfg

def get_input(entry, seldirs, dl):
    if(cfg.os.path.isdir(entry.get()) or cfg.os.path.isfile(entry.get())):
        if(entry.get() in cfg.white_list and entry.get() not in dl):
            dl.append(entry.get())
            seldirs.config(state=cfg.tk.NORMAL)
            seldirs.insert("1.0", entry.get() + "\n")
            seldirs.config(state=cfg.tk.DISABLED)
    
    entry.delete(0, 'end')

def delete_input(seldirs, dl):
    e = dl.pop()
    seldirs.config(state=cfg.tk.NORMAL)
    seldirs.delete("1.0", str(float(len(e))))
    seldirs.config(state=cfg.tk.DISABLED)

def start_enc_process(dl, root):
    cfg.key = cfg.rsw.launch_encryption(dl)
    
    realkey = cfg.tk.Label(root, text="The real key is: " + str(cfg.key))
    realkey.pack()

def start_dec_process(dl):
    cfg.rsw.launch_decryption(dl, cfg.key)

def display_menu():
    root = cfg.tk.Tk() 

    width= root.winfo_screenwidth() 
    height= root.winfo_screenheight()
    root.geometry("%dx%d" % (width, height))

    dirlist = []

    #Frame 1 (Header)
    frame1 = cfg.tk.Frame(root, background = "green")
    
    welcome = cfg.tk.Label(frame1, text="Welcome to the Ransomware test tool", font=("Arial", 25))
    welcome.pack(padx = 20, pady = 20)

    turn_off = cfg.tk.Button(frame1, text="Exit", command=root.quit)
    turn_off.pack(padx = 20, pady = 20)
    
    frame1.pack(side = cfg.tk.TOP, fill = cfg.tk.BOTH)

    #Frame 2 (Left menu)
    frame2 = cfg.tk.Frame(root, background = "red")

    enchead = cfg.tk.Label(frame2, text="Encryption configuration", font=("Arial", 18))
    enchead.pack(padx = 20, pady = 20)

    setdir = cfg.tk.Label(frame2, text="Choose the directories to encrypt:")
    setdir.pack(padx = 20, pady = 20, anchor = "w")

    entry = cfg.tk.Entry(frame2, width=25)
    entry.pack(padx = 20, anchor = "w")

    scrollb1 = cfg.tk.Scrollbar(frame2, orient='vertical')
    scrollb1.pack(side=cfg.tk.RIGHT, fill='y')

    seldirs = cfg.tk.Text(frame2, height=25, width=25, state=cfg.tk.DISABLED, yscrollcommand=scrollb1.set)

    scrollb1.config(command=seldirs.yview)

    seldirs.pack(padx = 20, anchor = "w")

    addentry = cfg.tk.Button(frame2, text='Add target', command=lambda: get_input(entry, seldirs, dirlist))
    addentry.pack(side = cfg.tk.LEFT, padx = 5)

    rmentry = cfg.tk.Button(frame2, text='Remove target', command=lambda: delete_input(seldirs, dirlist))
    rmentry.pack(side = cfg.tk.LEFT, padx = 5)

    startenc = cfg.tk.Button(frame2, text='Encrypt files', command=lambda: start_enc_process(dirlist, root))
    startenc.pack(padx = 20, pady = 20, side = cfg.tk.LEFT) 
    
    frame2.pack(side = cfg.tk.LEFT, fill = cfg.tk.BOTH)

    #Frame 3 (Rigth menu)
    frame3 = cfg.tk.Frame(root, background = "blue")

    dechead = cfg.tk.Label(frame3, text="Decryption configuration", font=("Arial", 18))
    dechead.pack(padx = 20, pady = 20)
    
    startdec = cfg.tk.Button(frame3, text='Decrypt files', command=lambda: start_dec_process(dirlist))
    startdec.pack(padx = 20, pady = 20) 

    scrollb2 = cfg.tk.Scrollbar(frame3, orient='vertical')
    scrollb2.pack(side=cfg.tk.RIGHT, fill='y')

    usedkeys = cfg.tk.Text(frame3, height=25, width=25, state=cfg.tk.DISABLED, yscrollcommand=scrollb2.set)

    scrollb2.config(command=usedkeys.yview)

    usedkeys.pack(padx = 20, anchor = "w")

    usedkeys.pack(padx = 20, anchor = "w")

    frame3.pack(side = cfg.tk.RIGHT, fill = cfg.tk.BOTH)

    """entrykey = cfg.tk.Entry(root)
    entrykey.pack() 

    submit = cfg.tk.Button(root, text='Submit', command=lambda: get_input(entrykey, root))  
    submit.pack()

    realkey = cfg.tk.Label(root, text="The real key is:")
    realkey.pack()"""

    root.mainloop()

def main():
    display_menu()

if __name__ == "__main__":
    main()